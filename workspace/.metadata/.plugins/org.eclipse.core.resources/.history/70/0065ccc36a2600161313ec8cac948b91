<%@ page language="java" import="java.util.*" pageEncoding="UTF-8"%>
<%
String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";
%>
<%@ page import="java.io.*" %>
<%@ page import="javax.servlet.*" %>
<%@ page import="javax.servlet.http.*" %>

<% 
	int MAX_SIZE=102400*102400;
	String rootPath;
	DataInputStream in=null;
	FileOutputStream fileOut=null;
	String remoteAddr=requset.getRemoteAddr();
	String serveName=request.getServerName();
	String realPath=request.getRealPath("/");
	realPath=realPath.substring(0,realPath.lastIndexOf("\\"));
	rootPath=realPath+"\\upload\\";
	out.println("上传文件的保存目录为"+rooPath)；
	String contentType=request.getContentType();
	try{
		if(contentType.indexOf("multipart/form-data")>=0){
			in=new DataINputStream(request.getInputStream());
			int formDataLength=request.getContentLength();
			if(formDataLength>MAx_SIZE){
				out.printlbn("上传的文件字节数不可以超过"+MAX_SIZE);
				return;
			}
			byte dataBytes[]=new byte[formDataLength];
			int byteRead=0;
			int totalBytesRead=0;
			while(totalByteRead<formDataLength){
				byteRead=in.read(dataBytes,totalBytesRead,formDataLength);
				totalBytesRead+=byteRead;
			}
			String file=new String(dataBytes);
			String saveFile=file.substring(file.indexOf("filename=\"")+10);
			saveFile=saveFile.substring(0,saveFile.indexOf("\n"));
			saveFile=saveFile.substring(saveFile.lastIndexOf("\\")+1,saveFile.indexOf("\""));
			int lastIndex=contentType.lastIndexOf("=");
			
			String boundary=contentType.substring(lastIndex+1,contentType.length());
			String fileName=rootPath+saveFile();
			int pos;
			pos=file.indexOf("filename=\"");
			pos=file.indexOf("\n",pos)+1;
			pos=file.indexOf("\n",pos)+1;
			pos=file.indexOf("\n",pos)+1;
			int boundaryLocation=file.indexOf(boundary,pos)-4;
			int startPos=((file.substring(0,pos)).getBytes()).length;
			int endPos=((file.substring(0,boundaryLocation)).getBytes()).length;
			File checkFile=new File(fileName);
			if(checkFile.exists()){
				out.print(saveFile+"文件已存在")；
			}
			File fileDir=new File(rootPath);
			if(!fileDir.exists()){
				fileDir.mkdirs();
			}
			fileOut=new FileOutputStream(fileName);
			fileOut.write(dataBytes,startPos,(endPos-startPos));
			fileOut.close();
			out.print(saveFile+"文件上传成功");
		}else{
			String content=request.getContentType();
			out.print("上传的数据类型不是multipart/form-data");
		}
	}catch(Exception e){throw new ServletException(e.getMessage());}
	response.setContentType("text/html");
//   图片上传路径
   String uploadPath =request.getSession().getServletContext().getRealPath("/")+"upload/images/";
//   图片临时上传路径
   String tempPath = request.getSession().getServletContext().getRealPath("/")+"upload/images/temp/";
//   图片网络相对路径
   String imagePath=request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+request.getContextPath()+"/"; 
//   文件夹不存在就自动创建：
   if(!new File(uploadPath).isDirectory())
   new File(uploadPath).mkdirs();
   if(!new File(tempPath).isDirectory())
   new File(tempPath).mkdirs();
   try {
   DiskFileUpload fu = new DiskFileUpload();
//   设置最大文件尺寸，这里是4MB
   fu.setSizeMax(4194304);
//   设置缓冲区大小，这里是4kb
   fu.setSizeThreshold(4096);
//   设置临时目录：
   fu.setRepositoryPath(tempPath);
//   得到所有的文件：
   List fileItems = fu.parseRequest(request);
   Iterator i = fileItems.iterator();
//   依次处理每一个文件：
   while(i.hasNext()) {
   FileItem file = (FileItem)i.next();
//   获得文件名，这个文件名是用户上传时用户的绝对路径：
   String sourcefileName = file.getName();
   if(sourcefileName!=null&&(sourcefileName.endsWith(".jpg")||sourcefileName.endsWith(".gif"))) {
//   在这里可以记录用户和文件信息,生成上传后的文件名
   String destinationfileName=null;
   Random rd = new Random();
   Calendar time = Calendar.getInstance();
   if(sourcefileName.endsWith(".jpg")){
   destinationfileName=String.valueOf(time.get(Calendar.YEAR))
   + String.valueOf(time.get(Calendar.MONTH))
   + String.valueOf(time.get(Calendar.DAY_OF_MONTH))
   + String.valueOf(time.get(Calendar.HOUR_OF_DAY))
   + String.valueOf(time.get(Calendar.MINUTE))
   + String.valueOf(time.get(Calendar.SECOND))
   + String.valueOf(rd.nextInt(100)) + ".jpg";
   }else if(sourcefileName.endsWith(".gif")){
   destinationfileName=String.valueOf(time.get(Calendar.YEAR))
   + String.valueOf(time.get(Calendar.MONTH))
   + String.valueOf(time.get(Calendar.DAY_OF_MONTH))
   + String.valueOf(time.get(Calendar.HOUR_OF_DAY))
   + String.valueOf(time.get(Calendar.MINUTE))
   + String.valueOf(time.get(Calendar.SECOND))
   + String.valueOf(rd.nextInt(100)) + ".gif";
   }
   File f1=new File(uploadPath+ destinationfileName);
   file.write(f1);
   out.print(sourcefileName+"成功上传！") ;
   out.print("<img src="+imagePath+"upload/images/"+destinationfileName+">");
   }else{
   out.println("上传文件出错，只能上传 *.jpg , *.gif");
   }
   }
//   跳转到上传成功提示页面
   }
   catch(Exception e) {
//   可以跳转出错页面
   }
   out.flush();
   out.close();

%>