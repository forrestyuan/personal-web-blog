package yfc118.servlet;

import java.io.IOException;
import java.util.Date;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import yfc118.dao.Article;
import yfc118.valuebean.ArticleBean;

public class ArticleServlet extends HttpServlet {

	public void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doPost(request, response);
	}
	public void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		String action = request.getParameter("action");
		if(action==null)			
			action="";
		if (action.equals("select"))
			this.selectArticle(request, response);					//获取某类别下所有文章
		if (action.equals("adminSelectList"))
			this.adminSelectList(request,response);
		if (action.equals("adminSelectSingle"))
			this.adminSelectSingle(request,response);
		if (action.equals("add"))
			this.addArticle(request, response);						//增加文章
		if (action.equals("delete"))
			this.deleteArticle(request, response);					//删除文章
		if (action.equals("modify"))
			this.modifyArticle(request, response);					//修改文章
		if (action.equals("read"))
			this.readArticle(request, response);					//阅读文章
		/*if (action.equals("followAdd"))
			this.validateFollow(request, response);		*/			//发表文章回复
		if (action.equals("typeAdd"))
			this.addArticleType(request, response);					//增加文章类别
		if (action.equals("typeSelect"))
			this.selectArticleType(request, response);				//查看文章类别
		/*if (action.equals("typeModify"))
			this.modifyArticleType(request, response);		*/		//修改文章类别
		if (action.equals("typeDelete"))
			this.deleteArticleType(request, response);				//删除文章类别
		
	}
	/**
	 * @功能 后台-删除文章 
	 */
	public void deleteArticle(HttpServletRequest request,HttpServletResponse response){}
	/**
	 * @功能 阅读文章
	 * @实现 1.增加文章阅读次数<br>2.获取指定文章信息<br>3.获取对该文章的所有评论
	 */
	public void readArticle(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		HttpSession session=request.getSession();
		ArticleBean articleBean = new ArticleBean();
		Article articleDao = new Article();
		
		String aTitle=request.getParameter("title");
		articleBean.setTitle(aTitle);
		
		articleDao.operationArticle("readTimes", articleBean);				//累加阅读次数
		articleBean=articleDao.queryArticleSingle(aTitle);						//查询指定文章的详细内容
		session.setAttribute("readSingle", articleBean);					//保存articleBean到request对象中
		
	/*	List reviewlist=reviewDao.queryReview(id);
		session.setAttribute("reviewlist",reviewlist);*/
		
		RequestDispatcher rd = request.getRequestDispatcher("/front/article/ArticleSingle.jsp");
		rd.forward(request, response);
	}
	/**
	 * @功能 修改文章
	 */
	public void modifyArticle(HttpServletRequest request,HttpServletResponse response) throws ServletException, IOException {		
		HttpSession session=request.getSession();
		RequestDispatcher rd=null;
		Article articleDao=new Article();		
		String type=request.getParameter("type");
		if(type==null)
			type="";
		if(!type.equals("doModify")){			
			String title=request.getParameter("title");
			ArticleBean articleBean=articleDao.queryArticleSingle(title);			
			request.setAttribute("modifySingle",articleBean);
			rd=request.getRequestDispatcher("/admin/article/ArticleModify.jsp");
			rd.forward(request,response);
		}
		else{
			String messages="";
			String href="";
			String forward="";
			boolean flag=validateArticle(request,response);
			if(flag){
				ArticleBean articleBean = new ArticleBean();
				articleBean.setArticleid(Integer.valueOf(request.getParameter("id")));
				//articleBean.setTypeId(Integer.valueOf(request.getParameter("typeId")));
				articleBean.setTitle(request.getParameter("title"));
				articleBean.setPubTime(request.getParameter("create"));
				articleBean.setInfo(request.getParameter("info"));
				articleBean.setArticle(request.getParameter("content"));
				
				boolean mark=articleDao.operationArticle("modify",articleBean);
				if (mark) {
					messages="<li>修改成功！</li>";
					href="<a href='ArticleServlet?action=adminSelectList&typeId="+session.getAttribute("showTypeId")+"'>[继续修改其他文章]</a>";
					forward="/admin/success.jsp";					
				} else {
					messages="<li>修改失败！</li>";
					href="<a href='javascript:window.history.go(-1)'>[返回]</a>";
					forward="/admin/error.jsp";
				}
				request.setAttribute("messages",messages);
				request.setAttribute("href",href);
			}
			else{
				href="<a href='javascript:window.history.go(-1)>[返回]</a>";
				forward="/admin/error.jsp";
				request.setAttribute("href",href);
			}
			rd=request.getRequestDispatcher(forward);
			rd.forward(request,response);			
		}
		
	}
	/**
	 * @功能 验证发表文章信息
	 */
	public boolean validateArticle(HttpServletRequest request,HttpServletResponse response) throws ServletException, IOException {
		boolean mark=true;
		String messages="";
		
		String typeId=request.getParameter("typeId");
		String title=request.getParameter("title");
		String create=request.getParameter("create");
		String info=request.getParameter("info");
		String content=request.getParameter("content");
		
		if(typeId==null||typeId.equals("")){
			mark=false;
			messages+="<li>请选择 <b>文章类别！</b></li>";
		}
		if(title==null||title.equals("")){
			mark=false;
			messages+="<li>请输入 <b>文章标题！</b></li>";
		}
		if(create==null||create.equals("")){
			mark=false;
			messages+="<li>请选择 <b>文章来源！</b></li>";
		}
		if(info==null||info.equals("")){
			mark=false;
			messages+="<li>请输入 <b>文章描述！</b></li>";
		}
		if(content==null||content.equals("")){
			mark=false;
			messages+="<li>请输入 <b>文章内容！</b></li>";
		}		
		if(mark){
			if(title.length()>20){
				mark=false;
				messages+="<li><b>文章标题</b> 最多允许输入20个字符！</li>";
			}
			if(content.length()>4000){
				mark=false;
				messages+="<li><b>文章内容</b> 最多允许输入4000个字符！</li>";
			}
		}
		request.setAttribute("messages",messages);
		return mark;
	}
	public String mydate(){
		Date date=new Date();
		int year=date.getYear();
		int month=date.getMonth();
		int day=date.getDay();
		return year+"-"+month+"-"+day;
	}
	
	
	/**
	 * @功能 后台-增加文章
	 */
	public void addArticle(HttpServletRequest request,	HttpServletResponse response) throws ServletException, IOException {
		String messages = "";
		String href="";
		String forward="";
		
		boolean flag=validateArticle(request,response);		
		if(flag){
			ArticleBean articleBean = new ArticleBean();
			articleBean.setTag(request.getParameter("type"));
			articleBean.setTitle(request.getParameter("title"));
			articleBean.setArticle(request.getParameter("content"));
			articleBean.setPubTime(this.mydate());
			//articleBean.setCreate(request.getParameter("create"));
			articleBean.setInfo(request.getParameter("info"));
			articleBean.setCount(0);
			articleBean.setReview(0);
			
			Article articleDao = new Article();
			boolean mark=articleDao.operationArticle("add", articleBean);
			if(mark) {
				messages = "<li>发表文章成功！</li>";
				href="<a href='admin/article/ArticleAdd.jsp'>[继续发表]</a>";
				forward="/admin/success.jsp";
			}
			else{
				messages="<li>发表文章失败！</li>";
				href="<a href='javascript:window.history.go(-1)'>[返回]</a>";
				forward="/admin/error.jsp";
			}			
			request.setAttribute("messages",messages);
			request.setAttribute("href",href);
		}
		else{
			href="<a href='javascript:window.history.go(-1)'>[返回]</a>";
			forward="/admin/error.jsp";			
			request.setAttribute("href",href);
		}
		RequestDispatcher rd = request.getRequestDispatcher(forward);
		rd.forward(request, response);	
	}
	/**
	 * @功能 添加文章评论 
	 */
	public void followAdd(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {}
	/**
	 * @功能 后台-修改文章类别 
	 */
	public void adminSelectList(HttpServletRequest request,HttpServletResponse response) throws ServletException, IOException {	}
	/**
	 * @功能 后台-删除文章类别
	 */
	public void deleteArticleType(HttpServletRequest request,HttpServletResponse response) throws ServletException, IOException {}
	/**
	 * @功能 从数据表中获取某类别下的所有文章 
	 */
	public void selectArticle(HttpServletRequest request,HttpServletResponse response) throws ServletException, IOException {}
	/**
	 * @功能 后台-增加文章类别 
	 */
	
	public void addArticleType(HttpServletRequest request,	HttpServletResponse response) throws ServletException, IOException {}
	public void selectArticleType(HttpServletRequest request,	HttpServletResponse response) throws ServletException, IOException {
	/*	ArticleTypeDao typeDao=new ArticleTypeDao();
		List typelist=typeDao.queryTypeList();
		request.setAttribute("typelist",typelist);
		RequestDispatcher rd=request.getRequestDispatcher("/admin/article/ArticleTypeList.jsp");
		rd.forward(request,response);	*/	
	}
	/**
	 * @功能 实现后台文章管理中的文章浏览功能 
	 */
	public void adminSelectList(HttpServletRequest request,HttpServletResponse response) throws ServletException, IOException {}
	public void adminSelectSingle(HttpServletRequest request,HttpServletResponse response) throws ServletException, IOException {		
		/*int id=MyTools.strToint(request.getParameter("id"));		
		ArticleDao articleDao = new ArticleDao();		
		
		ArticleBean articleBean=articleDao.queryArticleSingle(id);						//查询指定文章的详细内容
		request.setAttribute("articleSingle",articleBean);		
		
		RequestDispatcher rd=request.getRequestDispatcher("/admin/article/ArticleSingle.jsp");
		rd.forward(request,response);*/
	}
}
